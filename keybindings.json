// 既定値を上書きするには、このファイル内にキー バインドを挿入しますauto[]
[
  {
    "key": "alt+cmd+j",
    "command": "git.openFile",
    "when": "isInDiffEditor"
  },
  {
    "key": "alt+cmd+j",
    "command": "git.openChange",
    "when": "!isInDiffEditor"
  },
  {
    "key": "alt+cmd+f",
    "command": "-editor.action.startFindReplaceAction",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "shift+cmd+c",
    "command": "copyRelativeFilePath",
    "when": "editorFocus"
  },
  {
    "key": "cmd+r shift+alt+cmd+c",
    "command": "-copyRelativeFilePath",
    "when": "editorFocus"
  },
  {
    "key": "cmd+3",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "cmd+3",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "cmd+n",
    "command": "workbench.action.compareEditor.focusOtherSide",
    "when": "inDiffEditor"
  },
  {
    "key": "cmd+n",
    "command": "workbench.action.moveEditorToRightGroup",
    "when": "!inDiffEditor && activeEditorGroupIndex == '1'"
  },
  {
    "key": "cmd+n",
    "command": "workbench.action.moveEditorToLeftGroup",
    "when": "!inDiffEditor && !splitEditorsVertically && activeEditorGroupIndex == '2'"
  },
  {
    "key": "cmd+h",
    "command": "workbench.action.previousPanelView",
    "when": "panelFocus"
  },
  {
    "key": "cmd+l",
    "command": "workbench.action.nextPanelView",
    "when": "panelFocus"
  },
  {
    "key": "shift+cmd+e",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "cmd+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "alt+cmd+b",
    "command": "-workbench.action.toggleAuxiliaryBar"
  },
  {
    "key": "cmd+l",
    "command": "workbench.action.nextEditorInGroup",
    "when": "!panelFocus"
  },
  {
    "key": "cmd+r alt+cmd+right",
    "command": "-workbench.action.nextEditorInGroup"
  },
  {
    "key": "cmd+t",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    "key": "cmd+w",
    "command": "workbench.action.terminal.killEditor",
    "when": "terminalEditorFocus"
  },
  {
    "key": "cmd+w",
    "command": "-workbench.action.terminal.killEditor",
    "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated && resourceScheme == 'vscode-terminal' || terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
  },
  {
    "key": "cmd+w",
    "command": "workbench.action.closeActiveEditor",
    "when": "!terminalFocus"
  },
  {
    "key": "cmd+w",
    "command": "-workbench.action.closeActiveEditor"
  },
  {
    "key": "cmd+w",
    "command": "workbench.action.terminal.kill",
    "when": "focusedView && terminalFocus"
  },
  {
    "key": "cmd+/",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  {
    "key": "cmd+\\",
    "command": "-workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  {
    "key": "cmd+h",
    "command": "-editor.action.simpleInlineDiffs.rejectAll",
    "when": "editorTextFocus && hasDisplayedSimpleDiff"
  },
  {
    "key": "cmd+k",
    "command": "-workbench.action.terminal.clear",
    "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
  },
  {
    "key": "shift+cmd+enter",
    "command": "editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "f2",
    "command": "-editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+,",
    "command": "workbench.action.openApplicationSettingsJson"
  },
  {
    "key": "cmd+0",
    "command": "workbench.view.extensions",
    "when": "viewContainer.workbench.view.extensions.enabled"
  },
  {
    "key": "shift+cmd+x",
    "command": "-workbench.view.extensions",
    "when": "viewContainer.workbench.view.extensions.enabled"
  },
  {
    "key": "alt+s",
    "command": "workbench.action.files.saveWithoutFormatting"
  },
  {
    "key": "cmd+r s",
    "command": "-workbench.action.files.saveWithoutFormatting"
  },
  {
    "key": "alt+=",
    "command": "editor.action.fontZoomIn"
  },
  {
    "key": "alt+-",
    "command": "editor.action.fontZoomOut"
  },
  {
    "key": "cmd+2",
    "command": "-workbench.action.focusSecondEditorGroup"
  },
  {
    "key": "cmd+4",
    "command": "-workbench.action.focusFourthEditorGroup"
  },
  {
    "key": "cmd+5",
    "command": "-workbench.action.focusFifthEditorGroup"
  },
  {
    "key": "cmd+6",
    "command": "-workbench.action.focusSixthEditorGroup"
  },
  {
    "key": "cmd+7",
    "command": "-workbench.action.focusSeventhEditorGroup"
  },
  {
    "key": "cmd+8",
    "command": "-workbench.action.focusEighthEditorGroup"
  },
  {
    "key": "cmd+[",
    "command": "workbench.action.navigateBack"
  },
  {
    "key": "ctrl+-",
    "command": "-workbench.action.navigateBack",
    "when": "canNavigateBack"
  },
  {
    "key": "cmd+]",
    "command": "workbench.action.navigateForward"
  },
  {
    "key": "ctrl+shift+-",
    "command": "-workbench.action.navigateForward",
    "when": "canNavigateForward"
  },
  {
    "key": "ctrl+y",
    "command": "turboConsoleLog.displayLogMessage",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+alt+l",
    "command": "-turboConsoleLog.displayLogMessage"
  },
  {
    "key": "ctrl+shift+y",
    "command": "turboConsoleLog.deleteAllLogMessages",
    "when": "editorFocus"
  },
  {
    "key": "shift+alt+d",
    "command": "-turboConsoleLog.deleteAllLogMessages"
  },
  {
    "key": "shift+cmd+n",
    "command": "workbench.action.files.newUntitledFile"
  },
  {
    "key": "cmd+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "f4",
    "command": "editor.action.nextMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "f4",
    "command": "-search.action.focusNextSearchResult",
    "when": "hasSearchResult || inSearchEditor"
  },
  {
    "key": "shift+f4",
    "command": "-goToPreviousReference",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "shift+f4",
    "command": "-search.action.focusPreviousSearchResult",
    "when": "hasSearchResult || inSearchEditor"
  },
  {
    "key": "f3",
    "command": "editor.action.previousMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "shift+f3",
    "command": "-editor.action.previousMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "shift+cmd+g",
    "command": "-editor.action.previousMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "cmd+c",
    "command": "-extension.vim_cmd+c",
    "when": "editorTextFocus && vim.active && vim.overrideCopy && vim.use<D-c> && !inDebugRepl"
  },
  {
    "key": "shift+f7",
    "command": "-editor.action.wordHighlight.prev",
    "when": "editorTextFocus && hasWordHighlights"
  },
  {
    "key": "alt+j",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+down",
    "command": "-editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+k",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+up",
    "command": "-editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+cmd+c",
    "command": "copy-file-name.copyFileNameWithExtension",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+cmd+e",
    "command": "-copy-file-name.copyFileNameWithExtension",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+g shift+cmd+n",
    "command": "git.rename"
  },
  {
    "key": "cmd+g cmd+n",
    "command": "git.renameBranch"
  },
  {
    "key": "cmd+g cmd+a",
    "command": "git.stageSelectedRanges",
    "when": "isInDiffEditor && !operationInProgress"
  },
  {
    "key": "cmd+g cmd+d",
    "command": "git.unstageSelectedRanges",
    "when": "isInDiffEditor && !operationInProgress"
  },
  {
    "key": "cmd+g shift+cmd+s",
    "command": "git.stashIncludeUntracked"
  },
  {
    "key": "ctrl+c",
    "command": "workbench.action.terminal.hideFind",
    "when": "terminalFindVisible && terminalFocus && terminalHasBeenCreated || terminalFindVisible && terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+c",
    "command": "notifications.hideList",
    "when": "notificationCenterVisible"
  },
  {
    "key": "ctrl+c",
    "command": "workbench.action.hideInterfaceOverview",
    "when": "interfaceOverviewVisible"
  },
  {
    "key": "ctrl+c",
    "command": "closeDirtyDiff",
    "when": "dirtyDiffVisible"
  },
  {
    "key": "ctrl+c",
    "command": "closeParameterHints",
    "when": "editorFocus && parameterHintsVisible"
  },
  {
    "key": "ctrl+c",
    "command": "closeReferenceSearch",
    "when": "referenceSearchVisible && !config.editor.stablePeek"
  },
  {
    "key": "ctrl+c",
    "command": "workbench.action.closeQuickOpen",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+c",
    "command": "editor.action.inlineSuggest.hide",
    "when": "inlineSuggestionVisible"
  },
  {
    "key": "ctrl+c",
    "command": "workbench.action.hideComment",
    "when": "commentEditorFocused"
  },
  {
    "key": "ctrl+c",
    "command": "aipopup.action.closePromptBar",
    "when": "editorHasPromptBar && editorPromptBarFocused && editorTextFocus"
  },
  {
    "key": "ctrl+c",
    "command": "hideCodeActionWidget",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "alt+cmd+r",
    "command": "-revealFileInOS",
    "when": "!editorFocus"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.switchWindow"
  },
  {
    "key": "ctrl+,",
    "command": "workbench.action.moveEditorLeftInGroup"
  },
  {
    "key": "cmd+r shift+cmd+left",
    "command": "-workbench.action.moveEditorLeftInGroup"
  },
  {
    "key": "ctrl+.",
    "command": "workbench.action.moveEditorRightInGroup"
  },
  {
    "key": "cmd+r shift+cmd+right",
    "command": "-workbench.action.moveEditorRightInGroup"
  },
  {
    "key": "shift+escape",
    "command": "-hideCodeActionWidget",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "cmd+r shift+cmd+w",
    "command": "-workbench.action.closeAllGroups"
  },
  {
    "key": "cmd+r cmd+w",
    "command": "-workbench.action.closeAllEditors"
  },
  {
    "key": "cmd+u",
    "command": "-cursorai.action.retryInterpreterAction",
    "when": "activeAIChatEditor || view == 'workbench.panel.aichat.view' || (arbitrary function) && (arbitrary function)"
  },
  {
    "key": "cmd+g",
    "command": "-editor.action.nextMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "f3",
    "command": "-editor.action.nextMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "f4",
    "command": "workbench.action.terminal.findNext",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "f3",
    "command": "-workbench.action.terminal.findNext",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "f3",
    "command": "workbench.action.terminal.findPrevious",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+f3",
    "command": "-workbench.action.terminal.findPrevious",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+cmd+g",
    "command": "-workbench.action.terminal.findPrevious",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+enter",
    "command": "-github.copilot.generate",
    "when": "editorTextFocus && github.copilot.activated && !inInteractiveInput && !interactiveEditorFocused"
  },
  {
    "key": "ctrl+g",
    "command": "editor.action.jumpToBracket",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+cmd+\\",
    "command": "-editor.action.jumpToBracket",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+q",
    "command": "-workbench.action.quickOpenView"
  },
  {
    "key": "ctrl+shift+q",
    "command": "-workbench.action.quickOpenNavigatePreviousInViewPicker",
    "when": "inQuickOpen && inViewsPicker"
  },
  {
    "key": "ctrl+q",
    "command": "workbench.action.quickSwitchWindow",
    "when": "!terminalFocus"
  },
  {
    "key": "cmd+b",
    "command": "gitlens.gitCommands",
    "when": "inQuickOpen && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "alt+cmd+g /",
    "command": "-gitlens.gitCommands",
    "when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "shift+cmd+p",
    "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "cmd+p",
    "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "alt+cmd+l",
    "command": "gitlens.diffWithNext"
  },
  {
    "key": "alt+cmd+g .",
    "command": "-gitlens.diffWithNext",
    "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/"
  },
  {
    "key": "alt+cmd+l",
    "command": "gitlens.diffWithNextInDiffLeft",
    "when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/"
  },
  {
    "key": "alt+cmd+g .",
    "command": "-gitlens.diffWithNextInDiffLeft",
    "when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/"
  },
  {
    "key": "alt+cmd+l",
    "command": "gitlens.diffWithNextInDiffRight",
    "when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/"
  },
  {
    "key": "alt+cmd+g .",
    "command": "-gitlens.diffWithNextInDiffRight",
    "when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/"
  },
  {
    "key": "alt+cmd+h",
    "command": "gitlens.diffWithPrevious"
  },
  {
    "key": "alt+cmd+g ,",
    "command": "-gitlens.diffWithPrevious",
    "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
  },
  {
    "key": "alt+cmd+h",
    "command": "gitlens.diffWithPreviousInDiffLeft",
    "when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
  },
  {
    "key": "alt+cmd+g ,",
    "command": "-gitlens.diffWithPreviousInDiffLeft",
    "when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
  },
  {
    "key": "alt+cmd+h",
    "command": "gitlens.diffWithPreviousInDiffRight",
    "when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
  },
  {
    "key": "alt+cmd+g ,",
    "command": "-gitlens.diffWithPreviousInDiffRight",
    "when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
  },
  {
    "key": "alt+cmd+g shift+,",
    "command": "-gitlens.diffLineWithPrevious",
    "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
  },
  {
    "key": "alt+cmd+down",
    "command": "workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "alt+f5",
    "command": "-workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "alt+cmd+up",
    "command": "workbench.action.compareEditor.previousChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "shift+alt+f5",
    "command": "-workbench.action.compareEditor.previousChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "shift+alt+cmd+y",
    "command": "-workbench.debug.action.toggleRepl",
    "when": "workbench.panel.repl.view.active"
  },
  {
    "key": "cmd+4",
    "command": "workbench.view.debug"
  },
  {
    "key": "shift+cmd+d",
    "command": "-workbench.view.debug",
    "when": "viewContainer.workbench.view.debug.enabled"
  },
  {
    "key": "alt+cmd+,",
    "command": "gitlens.diffLineWithPrevious",
    "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/"
  },
  {
    "key": "shift+alt+,",
    "command": "-gitlens.diffLineWithPrevious",
    "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/"
  },
  {
    "key": "ctrl+space",
    "command": "focusSuggestion",
    "when": "suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "cmd+i",
    "command": "-focusSuggestion",
    "when": "suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+space",
    "command": "toggleSuggestionDetails",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "cmd+i",
    "command": "-toggleSuggestionDetails",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "cmd+i",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "key": "shift+cmd+/",
    "command": "editor.toggleFold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+l",
    "command": "-editor.toggleFold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "alt+cmd+backspace",
    "command": "-editor.action.removeBrackets",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+s",
    "command": "editor.action.selectToBracket",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+j",
    "command": "terminal.focus",
    "when": "editorFocus"
  },
  {
    "key": "cmd+; cmd+m",
    "command": "testing.openOutputPeek"
  },
  {
    "key": "cmd+; cmd+m",
    "command": "-testing.openOutputPeek"
  },
  {
    "key": "cmd+; cmd+o",
    "command": "testing.showMostRecentOutput",
    "when": "testing.hasAnyResults"
  },
  {
    "key": "cmd+; cmd+o",
    "command": "-testing.showMostRecentOutput",
    "when": "testing.hasAnyResults"
  },
  {
    "key": "cmd+; cmd+e",
    "command": "testing.debugFailTests",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+; cmd+e",
    "command": "-testing.debugFailTests"
  },
  {
    "key": "cmd+; l",
    "command": "testing.reRunLastRun",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+; l",
    "command": "-testing.reRunLastRun"
  },
  {
    "key": "cmd+; cmd+l",
    "command": "testing.debugLastRun",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+; cmd+l",
    "command": "-testing.debugLastRun"
  },
  {
    "key": "cmd+; f",
    "command": "testing.runCurrentFile",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+; f",
    "command": "-testing.runCurrentFile",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+; cmd+f",
    "command": "testing.debugCurrentFile",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+; cmd+f",
    "command": "-testing.debugCurrentFile",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+; cmd+r",
    "command": "testing.refreshTests",
    "when": "testing.canRefresh"
  },
  {
    "key": "cmd+; cmd+r",
    "command": "-testing.refreshTests",
    "when": "testing.canRefresh"
  },
  {
    "key": "cmd+; a",
    "command": "testing.runAll"
  },
  {
    "key": "cmd+; a",
    "command": "-testing.runAll"
  },
  {
    "key": "cmd+; cmd+a",
    "command": "testing.debugAll"
  },
  {
    "key": "cmd+; cmd+a",
    "command": "-testing.debugAll"
  },
  {
    "key": "cmd+; cmd+;",
    "command": "testing.runAtCursor",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+; c",
    "command": "-testing.runAtCursor",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+; cmd+c",
    "command": "testing.debugAtCursor",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+; cmd+c",
    "command": "-testing.debugAtCursor",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+; cmd+i",
    "command": "testing.toggleInlineTestOutput",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+; cmd+i",
    "command": "-testing.toggleInlineTestOutput"
  },
  {
    "key": "cmd+; x",
    "command": "testing.cancelRun"
  },
  {
    "key": "cmd+; cmd+x",
    "command": "-testing.cancelRun"
  },
  {
    "key": "cmd+t",
    "command": "-workbench.action.showAllSymbols"
  },
  {
    "key": "shift+cmd+b",
    "command": "workbench.action.toggleAuxiliaryBar"
  },
  {
    "key": "alt+cmd+e",
    "command": "workbench.action.toggleSidebarPosition"
  },
  {
    "key": "ctrl+shift+n",
    "command": "workbench.action.nextSideBarView"
  },
  {
    "key": "ctrl+shift+p",
    "command": "workbench.action.previousSideBarView"
  },
  {
    "key": "cmd+'",
    "command": "workbench.action.focusNextGroup"
  },
  {
    "key": "cmd+k cmd+n",
    "command": "-git.unstageSelectedRanges",
    "when": "isInDiffEditor && !operationInProgress"
  },
  {
    "key": "cmd+k alt+cmd+s",
    "command": "-git.stageSelectedRanges",
    "when": "isInDiffEditor && !operationInProgress"
  },
  {
    "key": "cmd+k cmd+r",
    "command": "-git.revertSelectedRanges",
    "when": "isInDiffEditor && !operationInProgress"
  },
  {
    "key": "cmd+n",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "shift+cmd+]",
    "command": "-workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "shift shift",
    "command": "search.action.openEditor"
  },
  {
    "key": "cmd+; shift+;",
    "command": "workbench.action.tasks.test",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+r",
    "command": "editor.action.startFindReplaceAction",
    "when": "editorFocus"
  },
  {
    "key": "shift+cmd+r",
    "command": "workbench.action.replaceInFiles"
  },
  {
    "key": "shift+cmd+h",
    "command": "-workbench.action.replaceInFiles"
  },
  {
    "key": "ctrl+h",
    "command": "cursorUndo",
    "when": "textInputFocus"
  },
  {
    "key": "cmd+u",
    "command": "-cursorUndo",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+l",
    "command": "cursorRedo",
    "when": "textInputFocus"
  },
  {
    "key": "alt+l",
    "command": "git.viewLineHistory"
  },
  {
    "key": "ctrl+`",
    "command": "workbench.action.quickOpenWithModes"
  },
  {
    "key": "alt+f12",
    "command": "-editor.action.peekDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "shift+f10",
    "command": "-editor.action.showContextMenu",
    "when": "textInputFocus"
  },
  {
    "key": "alt+cmd+enter",
    "command": "editor.action.goToImplementation",
    "when": "editorHasImplementationProvider && editorTextFocus"
  },
  {
    "key": "cmd+f12",
    "command": "-editor.action.goToImplementation",
    "when": "editorHasImplementationProvider && editorTextFocus"
  },
  {
    "key": "shift+cmd+;",
    "command": "notebook.format",
    "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "shift+alt+f",
    "command": "-notebook.format",
    "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "cmd+k cmd+f",
    "command": "-editor.action.formatSelection",
    "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+u",
    "command": "references-view.findReferences"
  },
  {
    "key": "shift+alt+f12",
    "command": "-references-view.findReferences",
    "when": "editorHasReferenceProvider"
  },
  {
    "key": "f3",
    "command": "references-view.prev",
    "when": "reference-list.hasResult && references-view.canNavigate"
  },
  {
    "key": "shift+f4",
    "command": "-references-view.prev",
    "when": "reference-list.hasResult && references-view.canNavigate"
  },
  {
    "key": "f4",
    "command": "references-view.next",
    "when": "reference-list.hasResult && references-view.canNavigate"
  },
  {
    "key": "f4",
    "command": "-references-view.next",
    "when": "reference-list.hasResult && references-view.canNavigate"
  },
  {
    "key": "alt+y",
    "command": "githd.viewHistory"
  },
  {
    "key": "shift+cmd+y",
    "command": "-workbench.debug.action.toggleRepl",
    "when": "workbench.panel.repl.view.active"
  },
  {
    "key": "shift+cmd+d",
    "command": "github.copilot.debug.generateConfiguration"
  },
  {
    "key": "cmd+f9",
    "command": "workbench.debug.viewlet.action.toggleBreakpointsActivatedAction"
  },
  {
    "key": "shift+f3",
    "command": "editor.debug.action.goToPreviousBreakpoint"
  },
  {
    "key": "shift+f4",
    "command": "editor.debug.action.goToNextBreakpoint"
  },
  {
    "key": "shift+f9",
    "command": "editor.debug.action.conditionalBreakpoint"
  },
  {
    "key": "cmd+; shift+cmd+f",
    "command": "testing.coverageCurrentFile",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+; shift+cmd+f",
    "command": "-testing.coverageCurrentFile",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+; shift+cmd+a",
    "command": "testing.coverageAll"
  },
  {
    "key": "cmd+; shift+cmd+a",
    "command": "-testing.coverageAll"
  },
  {
    "key": "cmd+; shift+cmd+c",
    "command": "testing.coverageAtCursor",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+; shift+cmd+c",
    "command": "-testing.coverageAtCursor",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+; shift+cmd+l",
    "command": "testing.coverageLastRun",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+; shift+cmd+l",
    "command": "-testing.coverageLastRun"
  },
  {
    "key": "cmd+; shift+cmd+i",
    "command": "testing.toggleInlineCoverage",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+; shift+cmd+i",
    "command": "-testing.toggleInlineCoverage"
  },
  {
    "key": "cmd+; shift+;",
    "command": "workbench.action.tasks.build",
    "when": "taskCommandsRegistered"
  },
  {
    "key": "shift+cmd+b",
    "command": "-workbench.action.tasks.build",
    "when": "taskCommandsRegistered"
  },
  {
    "key": "shift+alt+l",
    "command": "-bookmarks.expandSelectionToNext",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+j",
    "command": "-bookmarks.expandSelectionToPrevious",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+k",
    "command": "-bookmarks.shrinkSelection",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+cmd+h",
    "command": "bookmarks.jumpToPrevious",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+cmd+j",
    "command": "-bookmarks.jumpToPrevious",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+cmd+o",
    "command": "bookmarks.listFromAllFiles"
  },
  {
    "key": "shift+cmd+e",
    "command": "-workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "key": "shift+cmd+u",
    "command": "references-view.findImplementations"
  },
  {
    "key": "alt+o",
    "command": "outline.focus"
  },
  {
    "key": "ctrl+shift+cmd+n",
    "command": "workbench.action.newWindow"
  },
  {
    "key": "shift+cmd+n",
    "command": "-workbench.action.newWindow"
  },
  {
    "key": "alt+z",
    "command": "workbench.action.toggleZenMode",
    "when": "!isAuxiliaryWindowFocusedContext"
  },
  {
    "key": "cmd+k z",
    "command": "-workbench.action.toggleZenMode",
    "when": "!isAuxiliaryWindowFocusedContext"
  },
  {
    "key": "alt+z",
    "command": "workbench.action.exitZenMode",
    "when": "inZenMode"
  },
  {
    "key": "escape escape",
    "command": "-workbench.action.exitZenMode",
    "when": "inZenMode"
  },
  {
    "key": "shift+cmd+l",
    "command": "bookmarks.jumpToNext",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+cmd+l",
    "command": "-bookmarks.jumpToNext",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+cmd+\\",
    "command": "workbench.action.splitEditorOrthogonal"
  },
  {
    "key": "cmd+k cmd+\\",
    "command": "-workbench.action.splitEditorOrthogonal"
  },
  {
    "key": "cmd+k f12",
    "command": "-editor.action.revealDefinitionAside",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "cmd+enter",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus"
  },
  {
    "key": "f12",
    "command": "-editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus"
  },
  {
    "key": "alt+cmd+b",
    "command": "pr.checkoutFromReadonlyFile"
  },
  {
    "key": "alt+cmd+u",
    "command": "typescript.goToSourceDefinition"
  },
  {
    "key": "shift+alt+cmd+u",
    "command": "typescript.findAllFileReferences"
  },
  {
    "key": "cmd+6",
    "command": "workbench.view.extension.project-manager"
  },
  {
    "key": "cmd+5",
    "command": "workbench.view.extension.githd-explorer"
  },
  {
    "key": "shift+cmd+m",
    "command": "workbench.view.extension.bookmarks"
  },
  {
    "key": "shift+cmd+k",
    "command": "bookmarks.toggle",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+cmd+k",
    "command": "-bookmarks.toggle",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+cmd+j",
    "command": "bookmarks.list"
  },
  {
    "key": "shift+alt+cmd+j",
    "command": "bookmarks.clear"
  },
  {
    "key": "ctrl+shift+m",
    "command": "-editor.action.toggleTabFocusMode"
  },
  {
    "key": "f7",
    "command": "-editor.action.wordHighlight.next",
    "when": "editorTextFocus && hasWordHighlights"
  },
  {
    "key": "cmd+r",
    "command": "workbench.action.terminal.runRecentCommand",
    "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
  },
  {
    "key": "ctrl+alt+r",
    "command": "-workbench.action.terminal.runRecentCommand",
    "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
  },
  {
    "key": "cmd+9",
    "command": "gitlens.showFolderInTimeline"
  },
  {
    "key": "shift+cmd+k",
    "command": "cursorai.action.generateInTerminal",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+k",
    "command": "-cursorai.action.generateInTerminal",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+k t",
    "command": "workbench.action.toggleLightDarkThemes"
  },
  {
    "key": "cmd+e",
    "command": "workbench.action.focusSideBar",
    "when": "editorFocus"
  },
  {
    "key": "cmd+0",
    "command": "-workbench.action.focusSideBar"
  },
  {
    "key": "cmd+1",
    "command": "workbench.view.explorer"
  },
  {
    "key": "shift+alt+f",
    "command": "-editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  {
    "key": "shift+alt+f",
    "command": "-editor.action.formatDocument.none",
    "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
  },
  {
    "key": "cmd+r cmd+f",
    "command": "-editor.action.formatSelection",
    "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+u",
    "command": "vscode-neovim.send",
    "args": "<C-u>",
    "when": "editorTextFocus && neovim.init"
  },
  {
    "key": "ctrl+f",
    "command": "vscode-neovim.send",
    "args": "<C-f>",
    "when": "editorTextFocus && neovim.init"
  },
  {
    "key": "ctrl+b",
    "command": "vscode-neovim.send",
    "args": "<C-b>",
    "when": "editorTextFocus && neovim.init"
  },
  {
    "key": "alt+cmd+y",
    "command": "aichat.insertselectionintochat"
  },
  {
    "key": "shift+cmd+l",
    "command": "-aichat.insertselectionintochat"
  },
  {
    "key": "alt+cmd+f",
    "command": "workbench.action.quickTextSearch",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "cmd+f12",
    "command": "-editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && isWeb"
  },
  {
    "key": "shift+cmd+`[",
    "commnad": "workbench.action.navigateToLastEditLocation"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "editor.action.wordHighlight.prev",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+enter",
    "command": "editor.action.wordHighlight.next",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+cmd+n",
    "command": "extension.advancedNewFile"
  },
  {
    "key": "cmd+2",
    "command": "workbench.view.search"
  },
  {
    "key": "cmd+h",
    "command": "workbench.action.previousEditorInGroup",
    "when": "!panelFocus"
  },
  {
    "key": "cmd+r alt+cmd+left",
    "command": "-workbench.action.previousEditorInGroup"
  },
  {
    "key": "cmd+7",
    "command": "workbench.view.bugbot"
  },
  {
    "key": "cmd+8",
    "command": "workbench.view.extension.project-dashboard"
  },
  {
    "key": "ctrl+shift+l",
    "command": "workbench.action.nextAuxiliaryBarView"
  },
  {
    "key": "ctrl+shift+h",
    "command": "workbench.action.previousAuxiliaryBarView"
  },
  {
    "key": "alt+down",
    "command": "workbench.action.terminal.accessibleBufferGoToNextCommand",
    "when": "accessibleViewIsShown && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "key": "alt+down",
    "command": "-workbench.action.terminal.accessibleBufferGoToNextCommand",
    "when": "accessibleViewIsShown && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "key": "cmd+y",
    "command": "github.copilot.generate",
    "when": "editorTextFocus && github.copilot.activated && !commentEditorFocused"
  },
  {
    "key": "ctrl+enter",
    "command": "-github.copilot.generate",
    "when": "editorTextFocus && github.copilot.activated && !commentEditorFocused"
  },
  {
    "key": "alt+]",
    "command": "-github.copilot.nextPanelSolution",
    "when": "github.copilot.panelVisible && activeWebviewPanelId == 'GitHub Copilot Suggestions'"
  },
  {
    "key": "alt+[",
    "command": "-github.copilot.previousPanelSolution",
    "when": "github.copilot.panelVisible && activeWebviewPanelId == 'GitHub Copilot Suggestions'"
  },
  {
    "key": "ctrl+l",
    "command": "editor.action.accessibleViewNext",
    "when": "accessibleViewIsShown && accessibleViewSupportsNavigation"
  },
  {
    "key": "alt+]",
    "command": "-editor.action.accessibleViewNext",
    "when": "accessibleViewIsShown && accessibleViewSupportsNavigation"
  },
  {
    "key": "ctrl+h",
    "command": "editor.action.accessibleViewPrevious",
    "when": "accessibleViewIsShown && accessibleViewSupportsNavigation"
  },
  {
    "key": "alt+[",
    "command": "-editor.action.accessibleViewPrevious",
    "when": "accessibleViewIsShown && accessibleViewSupportsNavigation"
  },
  {
    "key": "ctrl+l",
    "command": "editor.action.inlineSuggest.showNext",
    "when": "inlineSuggestionVisible && !editorReadonly"
  },
  {
    "key": "alt+]",
    "command": "-editor.action.inlineSuggest.showNext",
    "when": "inlineSuggestionVisible && !editorReadonly"
  },
  {
    "key": "ctrl+h",
    "command": "editor.action.inlineSuggest.showPrevious",
    "when": "inlineSuggestionVisible && !editorReadonly"
  },
  {
    "key": "alt+[",
    "command": "-editor.action.inlineSuggest.showPrevious",
    "when": "inlineSuggestionVisible && !editorReadonly"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+ctrl+tab",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+y",
    "command": "aichat.newfollowupaction",
    "when": "composerFocused || focusedView =~ /^workbench.panel.aichat.view/"
  },
  {
    "key": "cmd+y",
    "command": "-aichat.newfollowupaction"
  },
  {
    "key": "alt+cmd+p",
    "command": "markdown.showPreviewToSide",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "key": "cmd+k v",
    "command": "-markdown.showPreviewToSide",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "key": "cmd+e cmd+e",
    "command": "-workbench.action.quickOpen",
    "when": "!config.sqltools.disableChordKeybindings && !editorHasSelection && !editorTextFocus"
  },
  {
    "key": "cmd+k",
    "command": "-cursorai.action.generateInTerminal",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalPromptBarVisible || terminalProcessSupported && terminalPromptBarVisible"
  },
  {
    "key": "cmd+i",
    "command": "-composer.startComposerPrompt"
  },
  {
    "key": "cmd+b",
    "command": "gitlens.showQuickBranchHistory",
    "when": "!inQuickOpen"
  },
  {
    "key": "ctrl+cmd+o",
    "command": "projectManager.listProjects"
  },
  {
    "key": "alt+cmd+p",
    "command": "-projectManager.listProjects"
  },
  {
    "key": "cmd+e",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "!editorFocus"
  },
  {
    "key": "cmd+p",
    "command": "workbench.action.showCommands",
    "when": "inFilesPicker && inQuickOpen && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "alt+f",
    "command": "editor.action.format"
  },
  {
    "key": "ctrl+n",
    "command": "cursorDown",
    "when": "textInputFocus && !suggestWidgetVisible&&!terminalFocus"
  },
  {
    "key": "ctrl+n",
    "command": "-cursorDown",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+p",
    "command": "cursorUp",
    "when": "textInputFocus && !suggestWidgetVisible&&!terminalFocus"
  },
  {
    "key": "ctrl+p",
    "command": "-cursorUp",
    "when": "textInputFocus"
  },
  {
    "key": "shift+enter",
    "command": "workbench.action.terminal.sendSequence",
    "args": {
      "text": "\\\r\n"
    },
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+cmd+i",
    "command": "claude-code.runClaude.keyboard",
    "when": "claude-code.hasClaudeInPath"
  },
  {
    "key": "cmd+escape",
    "command": "-claude-code.runClaude.keyboard",
    "when": "claude-code.hasClaudeInPath"
  },
  {
    "key": "alt+cmd+h",
    "command": "-rest-client.history"
  },
  {
    "key": "shift+cmd+i",
    "command": "workbench.action.chat.openAsk"
  },
  {
    "key": "alt+cmd+i",
    "command": "claude-code.insertAtMentioned",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+cmd+k",
    "command": "-claude-code.insertAtMentioned",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+enter",
    "command": "editor.action.previousMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "shift+enter",
    "command": "-editor.action.previousMatchFindAction",
    "when": "editorFocus && findInputFocussed"
  },
  {
    "key": "ctrl+n",
    "command": "list.focusDown",
    "when": "listFocus && !inputFocus  && !treestickyScrollFocused"
  },
  {
    "key": "ctrl+n",
    "command": "-list.focusDown",
    "when": "listFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "key": "ctrl+m",
    "command": "workbench.actions.view.problems",
    "when": "workbench.panel.markers.view.active"
  },
  {
    "key": "shift+cmd+m",
    "command": "-workbench.actions.view.problems",
    "when": "workbench.panel.markers.view.active"
  },
  {
    "key": "ctrl+j",
    "command": "find-it-faster.findFiles"
  },
  {
    "key": "shift+cmd+j",
    "command": "-find-it-faster.findFiles"
  },
  {
    "key": "shift+cmd+u",
    "command": "-find-it-faster.findWithinFiles"
  },
  {
    "key": "ctrl+shift+cmd+u",
    "command": "-find-it-faster.findWithinFilesWithType"
  },
  {
    "key": "shift+cmd+y",
    "command": "gitlens.graph.switchToEditorLayout"
  }
]